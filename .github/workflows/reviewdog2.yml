name: reviewdog
on: [pull_request]
jobs:
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install golangci-lint
        run: wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b /usr/local/bin/ v0.13.0

      - name: Install reviewdog
        run: wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.43.0

      - name: Set config into env
        run: |
          echo "GOLANGCI_YML=`pwd`/golangci.yml" >> $GITHUB_ENV
          echo "INPUT_GITHUB_TOKEN=${{ secrets.github_token }}" >> $GITHUB_ENV
          echo "WORKING_DIR=`pwd`/src" >> $GITHUB_ENV

      - name: hoge
        run: |
          export REVIEWDOG_GITHUB_API_TOKEN="${INPUT_GITHUB_TOKEN}"
          find . -type f -name go.mod -execdir golangci-lint run --config=${{ env.GOLANGCI_YML }} ./... \; \
          | reviewdog -efm="%f:%l:%c: %m" \
            -name="golangci-lint" \
            -reporter="github-pr-check"

#          find . -type f -name go.mod -execdir golangci-lint run --config=${{ env.GOLANGCI_YML }} ./... \
#          | reviewdog -efm="%f:%l:%c: %m" \
#            -name="golangci-lint" \
#            -reporter="github-pr-check" \;

#          if [ -n "${GITHUB_WORKSPACE}" ] ; then
#            cd "${GITHUB_WORKSPACE}/${INPUT_WORKDIR}" || exit
#          fi
